<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visuals on The Ocean Code</title>
    <link>https://theoceancode.netlify.app/tags/visuals/</link>
    <description>Recent content in visuals on The Ocean Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>&amp;copy; 2019</copyright>
    <lastBuildDate>Fri, 21 May 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://theoceancode.netlify.app/tags/visuals/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ODV figures in R with bathymetry</title>
      <link>https://theoceancode.netlify.app/post/odv_bathy/</link>
      <pubDate>Fri, 21 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://theoceancode.netlify.app/post/odv_bathy/</guid>
      <description>Objective Nearly four years after writing a blog post about recreating R figures in ODV I had someone reach out to me expressing interest in adding a bathymetry layer over the interpolated data. It&amp;rsquo;s always nice to know that these blog posts are being found useful for other researchers. And I have to admit I&amp;rsquo;m a bit surprised that the code still runs 4 years later. Especially considering that it uses the tidyverse which is notorious for breaking backwards compatibility.</description>
    </item>
    
    <item>
      <title>Polar plot climatologies</title>
      <link>https://theoceancode.netlify.app/post/polar_plot_clims/</link>
      <pubDate>Wed, 23 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://theoceancode.netlify.app/post/polar_plot_clims/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mapping with ggplot2</title>
      <link>https://theoceancode.netlify.app/post/mapping_with_ggplot2/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://theoceancode.netlify.app/post/mapping_with_ggplot2/</guid>
      <description>Objective There are many different things that require scientists to use programming languages (like R). Far too many to count here. There is however one common use amongst almost all environmental scientists: mapping. Almost every report, research project or paper will have need to refer to a study area. This is almost always &amp;ldquo;Figure 1&amp;rdquo;. To this end, whenever I teach R, or run workshops on it, one of the questions I am always prepared for is how to create a map of a particular area.</description>
    </item>
    
    <item>
      <title>ODV figures in R</title>
      <link>https://theoceancode.netlify.app/post/odv_figures/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://theoceancode.netlify.app/post/odv_figures/</guid>
      <description>Objective With more and more scientists moving to open source software (i.e. R or Python) to perform their numerical analyses the opportunities for collaboration increase and we may all benefit from this enhanced productivity. At the risk of sounding sycophantic, the future of scientific research truly is in multi-disciplinary work. What then could be inhibiting this slow march towards progress? We tend to like to stick to what is comfortable.</description>
    </item>
    
    <item>
      <title>Wind Vector Time Series</title>
      <link>https://theoceancode.netlify.app/post/wind_vectors/</link>
      <pubDate>Mon, 12 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://theoceancode.netlify.app/post/wind_vectors/</guid>
      <description>Objective As more and more physical scientists (e.g. oceanographers) move to R from other object oriented command line programming languages, such as Matlab, there will be more and more demand for the code that is needed to do some basic things that they may already know how to do in their previous languages that they don&amp;rsquo;t yet know how to do in R. Surprisingly, there are many things that should be very easy to find how to do in R that are not.</description>
    </item>
    
  </channel>
</rss>